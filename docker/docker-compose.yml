version: '3.8'

services:
  # Home Assistant Core
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /opt/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /dev/zigbee-dongle:/dev/zigbee-dongle
      - /dev/temperhum:/dev/temperhum
      - /dev/turtle-camera:/dev/turtle-camera
      - /dev/video0:/dev/video0
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyACM0:/dev/ttyACM0
    restart: unless-stopped
    privileged: true
    network_mode: host
    environment:
      - TZ=America/New_York
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Camera streaming service (optional)
  camera-stream:
    container_name: camera-stream
    image: "linuxserver/ffmpeg:latest"
    volumes:
      - /dev/video0:/dev/video0
      - /opt/homeassistant/config/www:/config/www
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    command: >
      ffmpeg -f v4l2 -i /dev/video0 -c:v libx264 -preset ultrafast -tune zerolatency
      -f mpegts http://localhost:8080/stream
    depends_on:
      - homeassistant

  # MQTT Broker for additional device communication
  mosquitto:
    container_name: mosquitto
    image: "eclipse-mosquitto:latest"
    volumes:
      - /opt/homeassistant/mosquitto/config:/mosquitto/config
      - /opt/homeassistant/mosquitto/data:/mosquitto/data
      - /opt/homeassistant/mosquitto/log:/mosquitto/log
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    environment:
      - TZ=America/New_York
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # InfluxDB for data logging and analytics
  influxdb:
    container_name: influxdb
    image: "influxdb:2.7"
    volumes:
      - /opt/homeassistant/influxdb:/var/lib/influxdb2
      - /opt/homeassistant/influxdb/config:/etc/influxdb2
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=turtle123
      - DOCKER_INFLUXDB_INIT_ORG=turtle-enclosure
      - DOCKER_INFLUXDB_INIT_BUCKET=turtle-data
      - TZ=America/New_York
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # Grafana for data visualization
  grafana:
    container_name: grafana
    image: "grafana/grafana:latest"
    volumes:
      - /opt/homeassistant/grafana:/var/lib/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=turtle123
      - GF_USERS_ALLOW_SIGN_UP=false
      - TZ=America/New_York
    depends_on:
      - influxdb
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # Watchtower for automatic updates
  watchtower:
    container_name: watchtower
    image: "containrrr/watchtower:latest"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --schedule "0 0 2 * * *" --include-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 2 * * *
      - WATCHTOWER_INCLUDE_STOPPED=true
      - TZ=America/New_York

  # Nginx reverse proxy (optional)
  nginx:
    container_name: nginx
    image: "nginx:alpine"
    volumes:
      - /opt/homeassistant/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /opt/homeassistant/nginx/ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - homeassistant
      - grafana
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # Backup service
  backup:
    container_name: backup
    image: "alpine:latest"
    volumes:
      - /opt/homeassistant:/backup/source
      - /opt/backups:/backup/destination
      - /opt/homeassistant/backup/backup.sh:/backup.sh:ro
    restart: "no"
    command: ["/bin/sh", "/backup.sh"]
    environment:
      - TZ=America/New_York

networks:
  default:
    name: turtle-network
    driver: bridge 